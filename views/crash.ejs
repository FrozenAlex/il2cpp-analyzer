<html>
<head>
<style>
html {
    background-color: #0d1117;
}

.main {
    display: grid;
    grid-template-rows: 44px 1fr;
    height: 100%;
}

.tab {
    overflow: hidden;
}

.tab button {
    color: #ffa657;
    background-color: #141b25;
    float: left;
    border: none;
    border-radius: 3px;
    outline: none;
    cursor: pointer;
    padding: 14px 16px;
    transition: 0.3s;
}

.tab button:hover {
    background-color: #1f2a3a;
}

.tab button.active {
    background-color: #30363d;
}

textarea {
    color: #ffa657;
    background-color: #0d1117;
    border-color: #30363d;
    border-radius: 6px;
    white-space: pre;
    overflow: auto;
    width: 100%;
    resize: none;
}

textarea:focus {
    outline-width: 0;
}

textarea::-webkit-scrollbar {
    width: 18px;
}

textarea::-webkit-scrollbar-corner {
    background: #161b22;
}

textarea::-webkit-scrollbar-track {
    background: #161b22;
}

textarea::-webkit-scrollbar-thumb {
    background-color: #30363d;
    border: 3px solid #161b22;
    border-radius: 16px;
}

</style>
</head>
<body>
    <div class="main">
        <div class="tab">
            <button class="tablinks active" id="crash" onclick="updateState('crash')">Crash</button>
            <button class="tablinks" id="log" onclick="updateState('log')">Log</button>
            <button class="tablinks" id="mods" onclick="updateState('mods')">Mods</button>
        </div>
        <textarea id="output" name="output" spellcheck="false" readonly>Loading...</textarea>
    </div>
</body>
<script>
    var crashData;
    var selected = "crash";
    const updateState = (id) => {
        if(id)
            selected = id;
        const tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(selected).className += " active";
        if(crashData) {
            switch(selected) {
                case "crash":
                    output.value = crashData.stacktrace || "Not Found!";
                    break;
                case "log":
                    output.value = crashData.log || "Not Found!";
                    break;
                case "mods":
                    output.value = crashData.mods.map(mod => mod.name + " (v" + mod.version + ")").join("\n") || "Not Found!";
                    break;
            }
        } else {
            output.value = "Not Found!"
        }
    }
    fetch("/api/crashes/<%= crashId %>")
    .then(response => {
        if (response.ok) {
            return response.json();
        }
        throw undefined;
    })
    .then(crash => {
        crashData = crash;
        updateState();
    }).catch(err => {
        crashData = undefined;
        updateState();
    });
</script>
</html>